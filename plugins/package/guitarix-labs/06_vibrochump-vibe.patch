diff --git a/trunk/src/LV2/faust/gx_vibrochump.dsp b/trunk/src/LV2/faust/gx_vibrochump.dsp
index 7f3aa70..21a3b74 100644
--- a/trunk/src/LV2/faust/gx_vibrochump.dsp
+++ b/trunk/src/LV2/faust/gx_vibrochump.dsp
@@ -94,6 +94,8 @@ tremolo(freq, depth) = lfo * depth + 1 - depth : vactrol with {
 
 effect =  (tremolo(vslider("speed[style:knob]",5,0.1,10,0.1),vslider("intensity[style:knob]",5,0,10,0.1)/10.2));
 
+vof =checkbox("vibe[enum:On|Off]");
+vibe = select2(vof, effect, 1.0);
 
 // After some playing it seems that tubestage() phase inverts
 // so if presence is wrapped around odd number of tubestages no need to reverse
@@ -110,7 +112,7 @@ process =  stage1:bmptone:*(preamp): stage2:transformer with {
 	// master 0 - > 20 Either 0.75 or 0.5
 	// How to do in Faust!
 	atten = 0.5; // Seems to need at least this much!
-	stage2 =  ( + : lowpass(1,6531.0):tubestage(TB_12AX7_250k,100.0,1500.0,1.204285) )~feedback:*(volume):lowpass(1,6531.0):*(effect):tubestage(TB_6V6_250k,120.0,820.0,1.130462):*(atten); 
+	stage2 =  ( + : lowpass(1,6531.0):tubestage(TB_12AX7_250k,100.0,1500.0,1.204285) )~feedback:*(volume):lowpass(1,6531.0):*(vibe):tubestage(TB_6V6_250k,120.0,820.0,1.130462):*(atten); 
        transformer = lowpass( 1, 6531 ):highpass( 1, 120) ;
 	feedback = *(checkbox("feedback") ):high_shelf( 3, 6531 ): *(-0.5);
       cabinet = lowpass(2,5500):peak_eq(-15.0,400.0,400):highpass(2,120);
diff --git a/trunk/src/LV2/gx_redeye.lv2/gx_redeye.ttl b/trunk/src/LV2/gx_redeye.lv2/gx_redeye.ttl
index e57a324..44eb837 100644
--- a/trunk/src/LV2/gx_redeye.lv2/gx_redeye.ttl
+++ b/trunk/src/LV2/gx_redeye.lv2/gx_redeye.ttl
@@ -108,6 +108,16 @@ rdfs:comment """
         a lv2:InputPort ,
             lv2:ControlPort ;
         lv2:index 4 ;
+        lv2:symbol "Vibe" ;
+        lv2:name "Vibe";
+        lv2:portProperty lv2:notOnGUI;
+        lv2:default 0 ;
+        lv2:minimum 0 ;
+        lv2:maximum 1.0 ;
+    ] , [
+        a lv2:InputPort ,
+            lv2:ControlPort ;
+        lv2:index 5 ;
         lv2:symbol "Speed" ;
         lv2:name "Speed";
         lv2:portProperty lv2:notOnGUI;
@@ -117,7 +127,7 @@ rdfs:comment """
     ] , [
         a lv2:InputPort ,
             lv2:ControlPort ;
-        lv2:index 5 ;
+        lv2:index 6 ;
         lv2:symbol "Intensity" ;
         lv2:name "Intensity";
         lv2:portProperty lv2:notOnGUI;
@@ -127,7 +137,7 @@ rdfs:comment """
     ] , [
         a lv2:InputPort ,
             lv2:ControlPort ;
-        lv2:index 6 ;
+        lv2:index 7 ;
         lv2:symbol "Sinewave" ;
         lv2:name "Sinewave";
         lv2:portProperty lv2:notOnGUI;
@@ -137,13 +147,13 @@ rdfs:comment """
     ] , [
         a lv2:AudioPort ,
             lv2:OutputPort ;
-        lv2:index 7 ;
+        lv2:index 8 ;
         lv2:symbol "out" ;
         lv2:name "Out"
     ] , [
         a lv2:AudioPort ,
             lv2:InputPort ;
-        lv2:index 8 ;
+        lv2:index 9 ;
         lv2:symbol "in" ;
         lv2:name "in"
     ] .
@@ -205,6 +215,16 @@ rdfs:comment """
         a lv2:InputPort ,
             lv2:ControlPort ;
         lv2:index 4 ;
+        lv2:symbol "Vibe" ;
+        lv2:name "Vibe";
+        lv2:portProperty lv2:notOnGUI;
+        lv2:default 0 ;
+        lv2:minimum 0 ;
+        lv2:maximum 1.0 ;
+    ] , [
+        a lv2:InputPort ,
+            lv2:ControlPort ;
+        lv2:index 5 ;
         lv2:symbol "Speed" ;
         lv2:name "Speed";
         lv2:portProperty lv2:notOnGUI;
@@ -214,7 +234,7 @@ rdfs:comment """
     ] , [
         a lv2:InputPort ,
             lv2:ControlPort ;
-        lv2:index 5 ;
+        lv2:index 6 ;
         lv2:symbol "Intensity" ;
         lv2:name "Intensity";
         lv2:portProperty lv2:notOnGUI;
@@ -224,7 +244,7 @@ rdfs:comment """
     ] , [
         a lv2:InputPort ,
             lv2:ControlPort ;
-        lv2:index 6 ;
+        lv2:index 7 ;
         lv2:symbol "Sinewave" ;
         lv2:name "Sinewave";
         lv2:portProperty lv2:notOnGUI;
@@ -234,13 +254,13 @@ rdfs:comment """
     ] , [
         a lv2:AudioPort ,
             lv2:OutputPort ;
-        lv2:index 7 ;
+        lv2:index 8 ;
         lv2:symbol "out" ;
         lv2:name "Out"
     ] , [
         a lv2:AudioPort ,
             lv2:InputPort ;
-        lv2:index 8 ;
+        lv2:index 9 ;
         lv2:symbol "in" ;
         lv2:name "in"
     ] .
@@ -302,6 +322,17 @@ rdfs:comment """
         a lv2:InputPort ,
             lv2:ControlPort ;
         lv2:index 4 ;
+        lv2:symbol "Vibe" ;
+        lv2:name "Vibe";
+        lv2:portProperty lv2:toggled;
+        lv2:portProperty lv2:integer;
+        lv2:default 0 ;
+        lv2:minimum 0 ;
+        lv2:maximum 1.0 ;
+    ] , [
+        a lv2:InputPort ,
+            lv2:ControlPort ;
+        lv2:index 5 ;
         lv2:symbol "Speed" ;
         lv2:name "Speed";
         lv2:default 5 ;
@@ -310,7 +341,7 @@ rdfs:comment """
     ] , [
         a lv2:InputPort ,
             lv2:ControlPort ;
-        lv2:index 5 ;
+        lv2:index 6 ;
         lv2:symbol "Intensity" ;
         lv2:name "Intensity";
         lv2:default 0 ;
@@ -319,7 +350,7 @@ rdfs:comment """
     ] , [
         a lv2:InputPort ,
             lv2:ControlPort ;
-        lv2:index 6 ;
+        lv2:index 7 ;
         lv2:symbol "Sinewave" ;
         lv2:name "Sinewave";
         lv2:portProperty lv2:toggled;
@@ -330,13 +361,13 @@ rdfs:comment """
     ] , [
         a lv2:AudioPort ,
             lv2:OutputPort ;
-        lv2:index 7 ;
+        lv2:index 8 ;
         lv2:symbol "out" ;
         lv2:name "Out"
     ] , [
         a lv2:AudioPort ,
             lv2:InputPort ;
-        lv2:index 8 ;
+        lv2:index 9 ;
         lv2:symbol "in" ;
         lv2:name "in"
     ] .
diff --git a/trunk/src/LV2/gx_redeye.lv2/gxredeye.h b/trunk/src/LV2/gx_redeye.lv2/gxredeye.h
index 1f79c97..af64bf0 100644
--- a/trunk/src/LV2/gx_redeye.lv2/gxredeye.h
+++ b/trunk/src/LV2/gx_redeye.lv2/gxredeye.h
@@ -42,6 +42,7 @@ typedef enum
   TONE,
   VOLUME,
   FEEDBACK,
+  VIBE,
   SPEED,
   INTENSITY,
   SINEWAVE,
diff --git a/trunk/src/LV2/gx_redeye.lv2/widget.cpp b/trunk/src/LV2/gx_redeye.lv2/widget.cpp
index 6b3db6b..da80db5 100644
--- a/trunk/src/LV2/gx_redeye.lv2/widget.cpp
+++ b/trunk/src/LV2/gx_redeye.lv2/widget.cpp
@@ -109,7 +109,7 @@ Widget::Widget(Glib::ustring plug_name)
   	m_vbox_.pack_start( m_hbox1_ ) ;
   }
  // Wrapper for lower layer with knobs in centre
-  m_hbox3_.set_spacing(20); // Calculate more accurately
+  m_hbox3_.set_spacing(6); // Calculate more accurately
   m_hbox3_.set_border_width(0);
   m_hbox3_.set_homogeneous(false);
   m_hbox3_.set_size_request(678,72);
@@ -119,7 +119,7 @@ Widget::Widget(Glib::ustring plug_name)
   m_vbox5_.set_border_width(0);
   m_vbox5_.set_homogeneous(false);
   if( vibrochump ){
-	m_vbox5_.set_size_request(36);
+	m_vbox5_.set_size_request(16);
   }else{
   	m_vbox5_.set_size_request(146);
   }
@@ -172,6 +172,11 @@ Widget::Widget(Glib::ustring plug_name)
   // This is for the Vibro amps
 
   if( vibrochump ){
+	  m_vbox21_.set_spacing(0);
+	  m_vbox21_.set_border_width(0);
+	  m_vbox21_.set_homogeneous(false);
+	  make_switch_box( &m_vbox21_, &m_switch2, "vibe", 0.0, 1.0, 1.0, vibe, VIBE, plug_name);
+          m_hbox3_.pack_start( m_vbox21_ ) ;
 	  m_vbox10_.set_spacing(0);
 	  m_vbox10_.set_border_width(0);
 	  m_vbox10_.set_homogeneous(false);
@@ -205,7 +210,7 @@ Widget::Widget(Glib::ustring plug_name)
   m_vbox14_.set_border_width(0);
   m_vbox14_.set_homogeneous(false);
   if( vibrochump ){
-	m_vbox14_.set_size_request(36);
+	m_vbox14_.set_size_request(16);
   }else{
   	m_vbox14_.set_size_request(146);
   }
@@ -393,6 +398,10 @@ void Widget::set_value(uint32_t port_index,
           sinewave = value;
           m_switch1.cp_set_value(sinewave);
           break;
+        case VIBE:
+          vibe = value;
+          m_switch2.cp_set_value(vibe);
+          break;
         default:
           break;
         }
@@ -429,6 +438,13 @@ void Widget::on_value_changed(uint32_t port_index)
       write_function(controller, (PortIndex)SPEED,
                  sizeof(float), 0, (const void*)&speed);
       break;
+
+   case VIBE:
+      vibe = m_switch2.cp_get_value();
+      //std::cout << "sinewave = " << sinewave << std::endl;
+      write_function(controller, (PortIndex)VIBE,
+                 sizeof(float), 0, (const void*)&vibe);
+      break;
     case INTENSITY:
       intensity = m_bigknob4.get_value();
      // std::cout << "intensity = " << intensity << std::endl;
diff --git a/trunk/src/LV2/gx_redeye.lv2/widget.h b/trunk/src/LV2/gx_redeye.lv2/widget.h
index 06d107a..d090682 100644
--- a/trunk/src/LV2/gx_redeye.lv2/widget.h
+++ b/trunk/src/LV2/gx_redeye.lv2/widget.h
@@ -88,6 +88,7 @@ protected:
   Gtk::VBox      m_vbox12_;
   Gtk::VBox      m_vbox13_;
   Gtk::VBox      m_vbox14_;
+  Gtk::VBox      m_vbox21_;
 
 
 Gtk::VBox      m_vbox15_;
@@ -121,6 +122,7 @@ Gtk::VBox      m_vbox20_;
 
   Gxw::Switch	     m_switch;
   Gxw::Switch	     m_switch1;
+  Gxw::Switch	     m_switch2;
 
   // stores port values we're currently at.
   float              gain;
@@ -130,6 +132,7 @@ Gtk::VBox      m_vbox20_;
   float              speed;
   float              intensity;
   float		sinewave ;
+  float		vibe ;
   bool		vibrochump ;
 };
 
